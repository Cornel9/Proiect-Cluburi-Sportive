// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_Cluburi_Sportive.Data;

#nullable disable

namespace Proiect_Cluburi_Sportive.Migrations
{
    [DbContext(typeof(Proiect_Cluburi_SportiveContext))]
    partial class Proiect_Cluburi_SportiveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Club", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CompetitieID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInfiintarii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartenerID")
                        .HasColumnType("int");

                    b.Property<int>("Valoare")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompetitieID");

                    b.HasIndex("PartenerID");

                    b.ToTable("Club");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Competitie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NumeCompetitie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Competitie");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Partener", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NumePartener")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Partener");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Sectie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NumeSectie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sectie");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.SectieClub", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClubID")
                        .HasColumnType("int");

                    b.Property<int>("SectieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClubID");

                    b.HasIndex("SectieID");

                    b.ToTable("SectieClub");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Club", b =>
                {
                    b.HasOne("Proiect_Cluburi_Sportive.Models.Competitie", "Competitie")
                        .WithMany("Cluburi")
                        .HasForeignKey("CompetitieID");

                    b.HasOne("Proiect_Cluburi_Sportive.Models.Partener", "Partener")
                        .WithMany("Club")
                        .HasForeignKey("PartenerID");

                    b.Navigation("Competitie");

                    b.Navigation("Partener");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.SectieClub", b =>
                {
                    b.HasOne("Proiect_Cluburi_Sportive.Models.Club", "Club")
                        .WithMany("SectiiClub")
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect_Cluburi_Sportive.Models.Sectie", "Sectie")
                        .WithMany("SectiiClub")
                        .HasForeignKey("SectieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Sectie");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Club", b =>
                {
                    b.Navigation("SectiiClub");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Competitie", b =>
                {
                    b.Navigation("Cluburi");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Partener", b =>
                {
                    b.Navigation("Club");
                });

            modelBuilder.Entity("Proiect_Cluburi_Sportive.Models.Sectie", b =>
                {
                    b.Navigation("SectiiClub");
                });
#pragma warning restore 612, 618
        }
    }
}
